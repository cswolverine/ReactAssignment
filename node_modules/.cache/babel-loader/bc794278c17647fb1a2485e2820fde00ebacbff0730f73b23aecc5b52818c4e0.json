{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahakaal\\\\Downloads\\\\demo (2)\\\\demo\\\\src\\\\HackerNewsSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HackerNewsSearch = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`https://hn.algolia.com/api/v1/search?query=${query}`);\n        setSearchResults(response.data.hits);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    if (query.trim() !== '') {\n      fetchData();\n    } else {\n      setSearchResults([]);\n    }\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hacker News Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search Hacker News\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: result.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: result.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, result.objectID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(HackerNewsSearch, \"f6zjlusNDp3zZQDsMW0Cc/t/VG0=\");\n_c = HackerNewsSearch;\nexport default HackerNewsSearch;\nvar _c;\n$RefreshReg$(_c, \"HackerNewsSearch\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","HackerNewsSearch","_s","query","setQuery","searchResults","setSearchResults","fetchData","response","get","data","hits","error","console","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","result","href","url","rel","title","objectID","_c","$RefreshReg$"],"sources":["C:/Users/mahakaal/Downloads/demo (2)/demo/src/HackerNewsSearch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst HackerNewsSearch = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`https://hn.algolia.com/api/v1/search?query=${query}`);\r\n        setSearchResults(response.data.hits);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    if (query.trim() !== '') {\r\n      fetchData();\r\n    } else {\r\n      setSearchResults([]);\r\n    }\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className='container'>\r\n      <h1>Hacker News Search</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search Hacker News\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      <ul>\r\n        {searchResults.map((result) => (\r\n          <li key={result.objectID}>\r\n            <a href={result.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {result.title}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HackerNewsSearch;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,8CAA6CN,KAAM,EAAC,CAAC;QACvFG,gBAAgB,CAACE,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC;MACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAED,IAAIT,KAAK,CAACW,IAAI,EAAE,KAAK,EAAE,EAAE;MACvBP,SAAS,EAAE;IACb,CAAC,MAAM;MACLD,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBhB,OAAA;MAAAgB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC3BpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCC,KAAK,EAAEpB,KAAM;MACbqB,QAAQ,EAAGC,CAAC,IAAKrB,QAAQ,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1C,eACFpB,OAAA;MAAAgB,QAAA,EACGX,aAAa,CAACsB,GAAG,CAAEC,MAAM,iBACxB5B,OAAA;QAAAgB,QAAA,eACEhB,OAAA;UAAG6B,IAAI,EAAED,MAAM,CAACE,GAAI;UAACJ,MAAM,EAAC,QAAQ;UAACK,GAAG,EAAC,qBAAqB;UAAAf,QAAA,EAC3DY,MAAM,CAACI;QAAK;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACX,GAHGQ,MAAM,CAACK,QAAQ;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAKzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV,CAAC;AAAClB,EAAA,CAzCID,gBAAgB;AAAAiC,EAAA,GAAhBjC,gBAAgB;AA2CtB,eAAeA,gBAAgB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}